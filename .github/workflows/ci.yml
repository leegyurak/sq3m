name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        cache-suffix: python-${{ matrix.python-version }}

    - name: Set up Python and install dependencies
      run: |
        uv python install ${{ matrix.python-version }}
        uv sync --frozen --all-groups

    - name: Run Ruff linter
      run: |
        uv run ruff check . --output-format=github

    - name: Run Ruff formatter check
      run: |
        uv run ruff format --check .

    - name: Run MyPy type checker
      run: |
        uv run mypy sqlllm/ --ignore-missing-imports

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        cache-suffix: python-${{ matrix.python-version }}

    - name: Set up Python and install dependencies
      run: |
        uv python install ${{ matrix.python-version }}
        uv sync --frozen --all-groups

    - name: Run tests
      run: |
        uv run pytest -v --cov=sqlllm --cov-report=xml --cov-report=term-missing

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}

  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "uv.lock"
        cache-suffix: python-3.11

    - name: Set up Python and install dependencies
      run: |
        uv python install 3.11
        uv sync --frozen --all-groups

    - name: Run pre-commit
      run: |
        uv run pre-commit run --all-files
